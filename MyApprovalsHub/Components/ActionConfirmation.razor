@using MyApprovalsHub.Interfaces
@using MyApprovalsHub.Models
@using MyApprovalsHub.Services



<FluentDialog @ref="ModalAction" Hidden=@ModalHidden aria-label="Simple dialog" Modal="true" style="--dialog-height: 200px;--dialog-width: 480px;">

   
        <div style="margin:20px;vertical-align:central;">

            <h5>Confirm @ActionDescription?</h5>

            <div class="form-floating mb-3" style="margin-top: 20px;width:100%;">
                <input type="text" class="form-control" id="floatingInput">
            <label for="floatingInput">Comments (optional)</label>
            </div>

            <div style="margin-top: 20px;">

                <button type="button" class="btn btn-success" @onclick=OnConfirmApproval >Confirm</button>

                <button type="button" class="btn btn-secondary" style="margin-left: 20px" @onclick=Hide>Cancel</button>

            </div>

        </div>
   
</FluentDialog>

@code {

    [Parameter]
    public bool ModalHidden { get; set; } = true;


    private string ActionDescription { get; set; }

    [Parameter]
    public PendingApproval selectedExpense { get; set; }

    private FluentDialog ModalAction;

    public delegate void CloseModalParameterButtonClick();

    private CloseModalParameterButtonClick closeModalParameter;

    private void FilterChanged(ChangeEventArgs args)
    {
        var filter = args.Value as string;

    }


    public void Approve(CloseModalParameterButtonClick closeModalParameterButtonClick)
    {
        ActionDescription = "approval";

        closeModalParameter = closeModalParameterButtonClick;

        ModalHidden = false;
    }


    public void Hide()
    {
        ModalHidden = true;
        StateHasChanged();
    }

    public void OnConfirmApproval()
    {

        switch (selectedExpense.Source)
        {
            case nameof(SourceDescription.ServiceNow):
                ApproveServiceNow();
                break;
        }

    }

    private void ApproveServiceNow()
    {
        IPendingApprovalService _serviceNow = ServiceNowService.GetInstance();

        if (_serviceNow.Approve(selectedExpense.Id, selectedExpense.Comments))
        {
            
            closeModalParameter?.Invoke();
            Hide();
        }
    }

}
