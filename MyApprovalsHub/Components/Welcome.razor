@using Microsoft.Extensions.Configuration
@using Microsoft.AspNetCore.Hosting
@using Microsoft.Extensions.Hosting
@using MyApprovalsHub.Services
@inject TeamsFx teamsfx
@inject TeamsUserCredential teamsUserCredential
@inject MicrosoftTeams MicrosoftTeams
@inject IWebHostEnvironment HostEnvironment
@inject IConfiguration Configuration
@inject NavigationManager MyNavigationManager

@if(isLoading)
{
    <div style="display: flex; justify-content: center; align-items: center; min-height: 100vh;">
		<FluentProgressRing/>
	</div>
}
else{

        <div class=" page-padding">

        <h3 class="left">Follows your approvals dashboard@(!String.IsNullOrEmpty(userName) ? ", " + userName : "")!</h3>

       
        <div class="welcome page" style="margin-top:40px">

            <div class="column">
                <ConcurApprovals ApprovalEmail=@userEmail />
            </div>

            <div class="column">
                <ServiceNowApprovals ApprovalEmail="luke.wilson@example.com"/>
            </div>

            <div class="column">
                <PeopleSoftApprovals />
            </div>

            <div class="column">
                <UKGApprovals />
            </div>            
            
        </div>

        <FluentDivider ></FluentDivider>
        
        <ApprovalsList />
        
        
    </div>
}

@code {
    string userName;
    string userEmail;
    string errorMessage;
    bool isInTeams;
    bool isLoading = true; 

    public Welcome()
    {
        //In case user refreshes the page
        ExpenseList.ClearExpenseList();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {

        await base.OnAfterRenderAsync(firstRender);

        if(firstRender)
        {
            isInTeams = await MicrosoftTeams.IsInTeams();

            if (isInTeams)
            { 
                var user = await teamsUserCredential.GetUserInfoAsync();
                userName = user.DisplayName;
                userEmail = user.PreferredUserName;
            }
            else
            {
                errorMessage = "Not running in Microsoft Teams.";
            }

            isLoading = false;
            StateHasChanged();            
        }
    }
    
}

